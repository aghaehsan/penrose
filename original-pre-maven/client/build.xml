<?xml version="1.0"?>
<!--
 Copyright 2009 Red Hat, Inc.
 All rights reserved.
-->
<project name="client" default="build">

    <description>Client</description>
<!--
    <property file="../build.properties"/>
-->
    <property file="build.properties"/>

    <property name="prefix" value=""/>
    <property name="client.home" value="${prefix}/opt/${product.name}-${product.version}"/>
    <property name="docs.target" value="dist/javadoc"/>

    <tstamp>
        <format property="TIMESTAMP" pattern="yyyyMMddHHmmss"/>
    </tstamp>

    <path id="lib.path">
        <fileset dir="../common">
            <include name="lib/**/*.jar"/>
            <include name="target/${project.name}-common-${product.version}.jar"/>
        </fileset>
    </path>

    <path id="main.path">
        <fileset dir="../common">
            <include name="lib/**/*.jar"/>
            <include name="target/${project.name}-common-${product.version}.jar"/>
        </fileset>
        <pathelement location="target/classes"/>
    </path>

    <target name="init">
        <echo message="Operating System: ${os.name} ${os.version} (${os.arch})" />
        <echo message="Java Version: ${java.version}" />
        <condition property="isWindows">
            <os family="windows"/>
        </condition>
        <condition property="isLinux">
            <and>
                <os family="unix"/>
                <not>
                    <os family="mac"/>
                </not>
            </and>
        </condition>
        <condition property="isLinuxIntel">
            <and>
                <os family="unix"/>
                <not>
                    <os family="mac"/>
                </not>
                <not>
                    <os arch="amd64"/>
                </not>
            </and>
        </condition>
        <condition property="isLinuxAMD64">
            <and>
                <os family="unix"/>
                <not>
                    <os family="mac"/>
                </not>
                <os arch="amd64"/>
            </and>
        </condition>
        <condition property="isMac">
            <os family="mac"/>
        </condition>
    </target>

    <target name="compile" depends="init">
        <echo message="Compiling ${product.name}."/>
        <mkdir dir="target/classes"/>
        <javac
            srcdir="src/java"
            destdir="target/classes"
            classpathref="lib.path"
            debug="on"
            debuglevel="lines,vars,source"
            source="1.5"
            target="1.5"
        />
        <copy todir="target/classes">
            <fileset dir="src/java" includes="**/*.properties,**/*.xml,**/*.dtd"/>
        </copy>
    </target>

    <target name="build" depends="compile">
        <echo message="Building ${product.name}."/>
        <jar destfile="target/${product.name}-${product.version}.jar">
            <fileset dir="target/classes"/>
            <manifest>
              <attribute name="Specification-Version"  value="${product.specification}"/>
              <attribute name="Implementation-Title"   value="${product.title}"/>
              <attribute name="Implementation-Version" value="${product.version}"/>
              <attribute name="Implementation-Vendor"  value="${product.vendor}"/>
              <attribute name="Built-Date"             value="${TIMESTAMP}"/>
            </manifest>
        </jar>
    </target>

    <target name="docs" depends="init">
        <mkdir dir="target/javadoc"/>
        <javadoc packagenames="org.safehaus.penrose.*"
            sourcepath="src/java"
            destdir="target/javadoc"
            classpathref="lib.path">
        </javadoc>
    </target>

    <target name="dist" depends="build">

        <mkdir dir="target/dist"/>

        <copy todir="target/dist" file="../build.properties"/>
        <copy todir="target/dist" file="../README.txt">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <copy todir="target/dist" file="../LICENSE.txt"/>
        <copy todir="target/dist" file="../COPYING.txt"/>
        <copy todir="target/dist" file="../INSTALL-BINARY.txt">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <copy todir="target/dist" file="../THIRDPARTY.txt"/>

        <copy todir="target/dist"
            file="${branding.path}/${images.icon}">
        </copy>

        <copy todir="target/dist/bin">
            <fileset dir="bin"/>
        </copy>

        <copy todir="target/dist/conf">
            <fileset dir="conf"/>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>

        <copy todir="target/dist/docs/javadoc" failonerror="false">
            <fileset dir="target/javadoc"/>
        </copy>

        <copy todir="target/dist/dtd" flatten="true">
            <fileset dir="src" includes="**/*.dtd"/>
        </copy>

        <copy todir="target/dist/lib" includeEmptyDirs="false">
            <fileset dir="../common/lib"/>
        </copy>
        <copy file="../common/target/${project.name}-common-${product.version}.jar"
              todir="target/dist/lib"
        />
        <copy file="target/${product.name}-${product.version}.jar"
              todir="target/dist/lib"
        />
        <mkdir dir="target/dist/lib/ext"/>

        <mkdir dir="target/dist/logs"/>

        <fixcrlf srcdir="target/dist" includes="**/*.sh" eol="unix"/>
        <chmod dir="target/dist" perm="ugo+rx" includes="**/*.sh"/>

        <mkdir dir="dist"/>
        <zip destfile="dist/${product.name}-${product.version}.zip">
            <zipfileset dir="target/dist" prefix="${product.name}-${product.version}" filemode="755">
                <include name="bin/*.sh"/>
            </zipfileset>
            <zipfileset dir="target/dist" prefix="${product.name}-${product.version}">
                <include name="**/*"/>
                <exclude name="bin/*.sh"/>
            </zipfileset>
        </zip>
        <tar destfile="dist/${product.name}-${product.version}.tar.gz" compression="gzip">
            <tarfileset dir="target/dist" prefix="${product.name}-${product.version}" mode="755">
                <include name="bin/*.sh"/>
            </tarfileset>
            <tarfileset dir="target/dist" prefix="${product.name}-${product.version}">
                <include name="**/*"/>
                <exclude name="bin/*.sh"/>
            </tarfileset>
        </tar>

    </target>

    <target name="dist-src" depends="init">
        <mkdir dir="dist"/>
        <echo message="Creating ${product.name}-${product.version}-src.zip"/>
        <zip destfile="dist/${product.name}-${product.version}-src.zip">
            <zipfileset dir="." prefix="${product.name}-${product.version}">
                <exclude name="dist/**"/>
                <exclude name="target/**"/>
            </zipfileset>
            <zipfileset dir="../common/lib" prefix="${product.name}-${product.version}/lib">
                <include name="**/*"/>
            </zipfileset>
            <zipfileset dir="../common/target" prefix="${product.name}-${product.version}/lib">
                <include name="${project.name}-common-${product.version}.jar"/>
            </zipfileset>
        </zip>
        <echo message="Creating ${product.name}-${product.version}-src.tar.gz"/>
        <tar destfile="dist/${product.name}-${product.version}-src.tar.gz" compression="gzip">
            <tarfileset dir="." prefix="${product.name}-${product.version}">
                <exclude name="dist/**"/>
                <exclude name="target/**"/>
            </tarfileset>
            <tarfileset dir="../common/lib" prefix="${product.name}-${product.version}/lib">
                <include name="**/*"/>
            </tarfileset>
            <tarfileset dir="../common/target" prefix="${product.name}-${product.version}/lib">
                <include name="${project.name}-common-${product.version}.jar"/>
            </tarfileset>
        </tar>
    </target>

    <target name="dist-all" depends="dist-linux,dist-win32">
    </target>

    <target name="dist-linux" depends="docs,dist" if="isLinux">
    </target>

    <target name="dist-win32" depends="docs,dist" if="isWindows">
        <echo message="Creating ${product.name}-${product.version}.exe"/>
        <copy todir="target" file="installer/${product.name}.iss">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <mkdir dir="dist"/>
        <exec executable="${iscc.path}">
            <arg line="/Q target/${product.name}.iss"/>
        </exec>
    </target>

    <target name="dist-rpm">
        <antcall target="dist-rpm-linux-intel"/>
        <antcall target="dist-rpm-linux-amd64"/>
        <antcall target="dist-rpm-win32"/>
    </target>

    <target name="dist-rpm-linux-intel" depends="init" if="isLinuxIntel">
        <mkdir dir="target"/>
        <exec executable="/bin/uname" output="target/arch.txt">
            <arg line="-i"/>
        </exec>
        <loadfile property="arch" srcFile="target/arch.txt">
            <filterchain>
                <striplinebreaks/>
            </filterchain>
        </loadfile>
        <echo message="Arch: ${arch}"/>
        <antcall target="rpm">
            <param name="rpm.prefix" value=""/>
            <param name="rpm.home" value="/usr/src/redhat"/>
            <param name="rpm.builder" value="/usr/bin/rpmbuild"/>
            <param name="rpm.spec" value="${product.name}.spec"/>
            <param name="rpm.arch" value="${arch}"/>
            <param name="rpm.name" value="${product.name}-${product.version}-1.${arch}.rpm"/>
        </antcall>
    </target>

    <target name="dist-rpm-linux-amd64" depends="init" if="isLinuxAMD64">
        <mkdir dir="target"/>
        <exec executable="/bin/uname" output="target/arch.txt">
            <arg line="-i"/>
        </exec>
        <loadfile property="arch" srcFile="target/arch.txt">
            <filterchain>
                <striplinebreaks/>
            </filterchain>
        </loadfile>
        <echo message="Arch: ${arch}"/>
        <antcall target="rpm">
            <param name="rpm.prefix" value=""/>
            <param name="rpm.home" value="/usr/src/redhat"/>
            <param name="rpm.builder" value="/usr/bin/rpmbuild"/>
            <param name="rpm.spec" value="${product.name}.spec"/>
            <param name="rpm.arch" value="${arch}"/>
            <param name="rpm.name" value="${product.name}-${product.version}-1.${arch}.rpm"/>
        </antcall>
    </target>

    <target name="dist-rpm-win32" depends="init" if="isWindows">
        <antcall target="rpm">
            <param name="rpm.prefix" value="${cygwin.home}"/>
            <param name="rpm.home" value="${cygwin.home}/usr/src/rpm"/>
            <param name="rpm.builder" value="${cygwin.home}/lib/rpm/rpmb.exe"/>
            <param name="rpm.spec" value="${product.name}.spec"/>
            <param name="rpm.arch" value="i386"/>
            <param name="rpm.name" value="${product.name}-${product.version}-1.cygwin.i386.rpm"/>
        </antcall>
    </target>

    <target name="rpm" depends="rpm-check,rpm-build">
    </target>

    <target name="rpm-check" depends="init">
        <echo message="Checking ${rpm.builder}"/>
        <condition property="hasRpmBuilder">
            <available file="${rpm.builder}"/>
        </condition>
    </target>

    <target name="rpm-build" depends="dist" if="hasRpmBuilder">
        <copy todir="target" file="installer/${rpm.spec}">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <copy todir="${rpm.home}/SOURCES" overwrite="true"
            file="dist/${product.name}-${product.version}.tar.gz">
        </copy>
        <exec executable="${rpm.builder}">
            <arg line="-bb target/${rpm.spec}"/>
        </exec>
        <copy todir="dist" failonerror="false"
            file="${rpm.home}/RPMS/${rpm.arch}/${rpm.name}">
        </copy>
<!--
        <copy file="../tools/sfx-header" tofile="dist/${rpm.name}.bin" overwrite="true"/>
        <exec executable="${rpm.prefix}/bin/sh">
            <arg value="-c"/>
            <arg value="echo __LICENSE__ &gt;&gt; dist/${rpm.name}.bin"/>
        </exec>
        <exec executable="${rpm.prefix}/bin/sh">
            <arg value="-c"/>
            <arg value="cat ../LICENSE.txt &gt;&gt; dist/${rpm.name}.bin"/>
        </exec>
        <exec executable="${rpm.prefix}/bin/sh">
            <arg value="-c"/>
            <arg value="echo __CONTENT__ &gt;&gt; dist/${rpm.name}.bin"/>
        </exec>
        <exec executable="${rpm.prefix}/bin/sh">
            <arg value="-c"/>
            <arg value="cat dist/${rpm.name} &gt;&gt; dist/${rpm.name}.bin"/>
        </exec>
        <chmod file="dist/${rpm.name}.bin" perm="a+rx"/>
-->        
    </target>

    <target name="pre-install">
        <mkdir dir="${client.home}"/>
        <condition property="conf.missing">
          <not>
            <available file="${client.home}/conf/log4j.xml"/>
          </not>
        </condition>
    </target>

    <target name="copy-conf" if="conf.missing">
        <copy todir="${client.home}">
            <fileset dir="target/dist">
                <include name="conf/**/*"/>
            </fileset>
        </copy>
    </target>

    <target name="install" depends="init,pre-install,copy-conf">
        <mkdir dir="${client.home}"/>
        <delete failonerror="false">
            <fileset dir="${client.home}">
                <include name="lib/*"/>
            </fileset>
        </delete>
        <copy todir="${client.home}">
            <fileset dir="target/dist">
                <include name="**/*"/>
                <exclude name="conf/**/*"/>
            </fileset>
        </copy>
        <chmod dir="${client.home}" perm="ugo+rw" includes="**/*"/>
        <chmod dir="${client.home}" perm="ugo+rx" includes="**/*.sh"/>
    </target>

    <target name="clean">
        <delete dir="dist" failonerror="false"/>
        <delete dir="target" failonerror="false"/>
    </target>

</project>
