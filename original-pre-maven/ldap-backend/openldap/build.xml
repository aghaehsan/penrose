<!--
 Copyright 2009 Red Hat, Inc.
 All rights reserved.
-->
<project name="ldap-backend-openldap" default="build">

    <description>LDAP backend for OpenLDAP</description>

    <property file="../build.properties"/>
    <property name="prefix" value=""/>
    <property name="product.fullName" value="${product.name}-openldap-${product.version}"/>
    <property name="project.home" value="${prefix}/usr/local/${product.fullName}"/>

    <property name="rpm.release" value="1"/>

    <property name="cygwin.home" value="c:/cygwin"/>

    <property name="openldap.version" value="2.2.26"/>
    <property name="openldap.src" value="${cygwin.home}/usr/src/openldap-${openldap.version}"/>
    <property name="openldap.patch" value="openldap-${openldap.version}/openldap.patch"/>

    <property file="openldap-${openldap.version}/openldap.properties"/>

    <tstamp/>

    <target name="init">
        <echo message="Operating System: ${os.name} ${os.version}" />
        <condition property="isWindows">
            <os family="windows"/>
        </condition>
        <condition property="isUnix">
            <and>
                <os family="unix"/>
                <not>
                    <os family="mac"/>
                </not>
            </and>
        </condition>
        <condition property="isMac">
            <os family="mac"/>
        </condition>
    </target>

    <target name="copy" depends="init">
        <copy todir="${openldap.src}/servers/slapd/back-java" overwrite="true">
            <fileset dir="src/openldap" />
        </copy>
    </target>

    <target name="patch" depends="copy">
        <antcall target="patch-mac"/>
        <antcall target="patch-unix"/>
        <antcall target="patch-windows"/>
    </target>

    <target name="patch-mac" if="isMac">
        <property name="patch" value="/usr/bin/patch"/>
        <echo message="Patching files in ${openldap.src} using ${openldap.patch}:" />
        <exec executable="${patch}">
            <arg line="-p1"/>
            <arg line="-i ${basedir}/${openldap.patch}"/>
            <arg line="-d ${openldap.src}"/>
        </exec>
    </target>

    <target name="patch-unix" if="isUnix">
        <property name="patch" value="/usr/bin/patch"/>
        <echo message="Patching files in ${openldap.src} using ${openldap.patch}:" />
        <exec executable="${patch}">
            <arg line="-p1"/>
            <arg line="-i ${basedir}/${openldap.patch}"/>
            <arg line="-d ${openldap.src}"/>
        </exec>
    </target>

    <target name="patch-windows" if="isWindows">
        <property name="dlltool" value="${cygwin.home}/bin/dlltool.exe"/>
        <echo message="Calling ${dlltool}:" />
        <echo message=" --input-def ${openldap.src}/servers/slapd/back-java/jvm.def" />
        <echo message=" --output-lib ${openldap.src}/servers/slapd/back-java/libjvm.dll.a" />
        <exec executable="${dlltool}">
            <arg line="--input-def ${openldap.src}/servers/slapd/back-java/jvm.def"/>
            <arg line="--output-lib ${openldap.src}/servers/slapd/back-java/libjvm.dll.a"/>
            <arg line="--kill-at"/>
            <arg line="--dllname jvm.dll"/>
        </exec>
        <property name="patch" value="${cygwin.home}/bin/patch.exe"/>
        <echo message="Patching files in ${openldap.src} using ${openldap.patch}:" />
        <exec executable="${patch}">
            <arg line="-p1"/>
            <arg line="-i ${basedir}/${openldap.patch}"/>
            <arg line="-d ${openldap.src}"/>
        </exec>
    </target>

    <target name="compile" depends="init">
        <echo message="Compiling LDAP backend."/>
        <mkdir dir="target/classes"/>
        <javac
            srcdir="src/java"
            destdir="target/classes"
            debug="on"
            debuglevel="lines,vars,source"
            source="1.5"
            target="1.5"
        />
        <copy todir="target/classes">
            <fileset dir="src/java" includes="**/*.properties,**/*.xml,**/*.dtd"/>
        </copy>
    </target>

    <target name="build" depends="compile">
        <echo message="Building ${product.title}."/>
        <jar jarfile="target/${product.name}-${product.version}.jar">
            <fileset dir="target/classes"/>
            <manifest>
                <attribute name="Specification-Version"  value="${product.specification}"/>
                <attribute name="Implementation-Title"   value="${product.title}"/>
                <attribute name="Implementation-Version" value="${product.version}"/>
                <attribute name="Implementation-Vendor"  value="${product.vendor}"/>
                <attribute name="Build-Date" value="${DSTAMP}"/>
            </manifest>
        </jar>
    </target>

    <target name="dist" depends="init">
        <mkdir dir="target/dist"/>
        <copy todir="target/dist" failonerror="false">
        	<fileset dir=".">
                <include name="README.txt"/>
                <include name="conf/**/*"/>
            </fileset>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <mkdir dir="target/dist/lib"/>
        <copy todir="target/dist/lib" failonerror="false">
            <fileset dir="openldap-${openldap.version}/${os.name}"/>
            <fileset dir="lib"/>
        </copy>
    </target>

    <target name="docs" depends="init">
        <mkdir dir="target/dist/javadoc"/>
        <javadoc packagenames="*"
            sourcepath="src/java"
            destdir="target/dist/javadoc">
        </javadoc>
        <tar destfile="target/${product.name}-docs.tar.gz" compression="gzip">
            <tarfileset dir="target/dist/javadoc"/>
       </tar>
    </target>

    <target name="dist-src" depends="init">
        <mkdir dir="dist"/>
        <echo message="Creating ${product.fullName}-src.tar.gz"/>
        <tar destfile="dist/${product.fullName}-src.tar.gz" compression="gzip">
            <tarfileset dir="openldap-${openldap.version}/${os.name}" prefix="${product.fullName}/lib" mode="755">
            </tarfileset>
            <tarfileset dir="openldap-${openldap.version}" prefix="${product.fullName}/openldap-${openldap.version}">
                <include name="openldap.properties"/>
            </tarfileset>
            <tarfileset dir="." prefix="${product.fullName}">
                <include name="README.txt"/>
                <include name="build.properties"/>
                <include name="build.xml"/>
                <include name="conf/**/*"/>
                <include name="lib/**/*"/>
            </tarfileset>
            <tarfileset dir="src/openldap" prefix="${product.fullName}/src/openldap">
            </tarfileset>
            <tarfileset dir="src/java" prefix="${product.fullName}/src/java">
            </tarfileset>
        </tar>
    </target>

    <target name="install" depends="install-all,install-unix">
    </target>

    <target name="install-all" depends="init">
        <mkdir dir="${project.home}"/>
        <copy todir="${project.home}" failonerror="false">
            <fileset dir="target/dist"/>
        </copy>
        <chmod perm="ugo+rx">
            <fileset dir="${project.home}/lib">
                <include name="${java.backend.library.name}"/>
            </fileset>
        </chmod>
<!--
        <mkdir dir="${prefix}/usr/share/openldap/lib"/>
        <copy todir="${prefix}/usr/share/openldap/lib" file="target/dist/lib/${product.name}-${product.version}.jar"/>
        <mkdir dir="${prefix}/usr/share/doc/${product.fullName}/javadoc"/>
        <copy todir="${prefix}/usr/share/doc/${product.fullName}/javadoc" failonerror="false">
            <fileset dir="target/dist/javadoc"/>
        </copy>
-->
    </target>

    <target name="install-unix" depends="init" if="isUnix">
        <property name="ln" value="/bin/ln"/>
        <echo message="Create links to ${java.backend.library.name}"/>
        <exec executable="${ln}">
            <arg line="-sf ${java.backend.library.name} ${project.home}/lib/${java.backend.library.link}"/>
        </exec>
<!--
        <mkdir dir="${prefix}${java.backend.library.path}"/>
        <exec executable="${ln}">
            <arg line="-sf ${project.home}/lib/${java.backend.library.name} ${prefix}${java.backend.library.path}/${java.backend.library.name}"/>
        </exec>
        <exec executable="${ln}">
            <arg line="-sf ${project.home}/lib/${java.backend.library.name} ${prefix}${java.backend.library.path}/${java.backend.library.link}"/>
        </exec>
-->
    </target>

    <target name="dist-unix" depends="dist,docs" if="isUnix">
        <antcall target="rpm">
            <param name="rpm.prefix" value=""/>
            <param name="rpm.home" value="/usr/src/redhat"/>
            <param name="rpm.builder" value="/usr/bin/rpmbuild"/>
            <param name="rpm.spec" value="${product.name}-openldap.spec"/>
            <param name="rpm.name" value="${product.fullName}-${rpm.release}.i386.rpm"/>
        </antcall>
    </target>

    <target name="dist-win32" depends="dist,docs" if="isWindows">
        <antcall target="rpm">
            <param name="rpm.prefix" value="${cygwin.home}"/>
            <param name="rpm.home" value="${cygwin.home}/usr/src/rpm"/>
            <param name="rpm.builder" value="${cygwin.home}/lib/rpm/rpmb.exe"/>
            <param name="rpm.spec" value="${product.name}-openldap.spec"/>
            <param name="rpm.name" value="${product.fullName}-${rpm.release}.cygwin.i386.rpm"/>
        </antcall>
    </target>

    <target name="rpm" depends="rpm-check,rpm-build">
    </target>

    <target name="rpm-check" depends="init">
        <echo message="Checking ${rpm.builder}"/>
        <condition property="hasRpmBuilder">
            <available file="${rpm.builder}"/>
        </condition>
    </target>

    <target name="rpm-build" depends="init" if="hasRpmBuilder">
        <mkdir dir="target"/>
        <copy todir="target" file="installer/${rpm.spec}">
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <copy todir="${rpm.home}/SOURCES" overwrite="true"
            file="dist/${product.fullName}-src.tar.gz">
        </copy>
        <exec executable="${rpm.builder}">
            <arg line="-bb target/${rpm.spec}"/>
        </exec>
        <copy todir="dist" failonerror="false"
            file="${rpm.home}/RPMS/i386/${rpm.name}">
        </copy>
    </target>

    <target name="dist-all" depends="dist-src,dist-unix,dist-win32">
    </target>

    <target name="clean" depends="init">
        <delete dir="target" failonerror="false"/>
        <delete dir="dist" failonerror="false"/>
    </target>

</project>
